import{GPULoadOp,GPUStoreOp}from"./constants.js";import{Color,Mesh,BoxGeometry,BackSide}from"three";import{context,positionWorldDirection,MeshBasicNodeMaterial}from"../../nodes/Nodes.js";let _clearAlpha;const _clearColor=new Color;class WebGPUBackground{constructor(e,o){this.renderer=e,this.properties=o,this.boxMesh=null,this.boxMeshNode=null,this.forceClear=!1}clear(){this.forceClear=!0}update(e,o,r){const t=this.renderer,a=!0===e.isScene?e.backgroundNode||this.properties.get(e).backgroundNode||e.background:null;let l=this.forceClear;if(null===a)_clearColor.copy(t._clearColor),_clearAlpha=t._clearAlpha;else if(!0===a.isColor)_clearColor.copy(a),_clearAlpha=1,l=!0;else if(!0===a.isNode){const r=this.properties.get(e),l=a;_clearColor.copy(t._clearColor),_clearAlpha=t._clearAlpha;let c=this.boxMesh;if(null===c){this.boxMeshNode=context(l,{getUVNode:()=>positionWorldDirection});const e=new MeshBasicNodeMaterial;e.colorNode=this.boxMeshNode,e.side=BackSide,e.depthTest=!1,e.depthWrite=!1,e.fog=!1,this.boxMesh=c=new Mesh(new BoxGeometry(1,1,1),e),c.frustumCulled=!1,c.onBeforeRender=function(e,o,r){const t=r.far;this.matrixWorld.makeScale(t,t,t).copyPosition(r.matrixWorld)}}const p=l.getCacheKey();r.backgroundCacheKey!==p&&(this.boxMeshNode.node=l,c.material.needsUpdate=!0,r.backgroundCacheKey=p),o.unshift(c,c.geometry,c.material,0,0,null)}else console.error("THREE.WebGPURenderer: Unsupported background configuration.",a);const c=r.descriptorGPU.colorAttachments[0],p=r.descriptorGPU.depthStencilAttachment;!0===t.autoClear||!0===l?(!0===t.autoClearColor?(_clearColor.multiplyScalar(_clearAlpha),c.clearValue={r:_clearColor.r,g:_clearColor.g,b:_clearColor.b,a:_clearAlpha},c.loadOp=GPULoadOp.Clear,c.storeOp=GPUStoreOp.Store):(c.loadOp=GPULoadOp.Load,c.storeOp=GPUStoreOp.Store),r.depth&&(!0===t.autoClearDepth?(p.depthClearValue=t._clearDepth,p.depthLoadOp=GPULoadOp.Clear,p.depthStoreOp=GPUStoreOp.Store):(p.depthLoadOp=GPULoadOp.Load,p.depthStoreOp=GPUStoreOp.Store)),r.stencil&&(!0===t.autoClearStencil?(p.stencilClearValue=t._clearStencil,p.stencilLoadOp=GPULoadOp.Clear,p.stencilStoreOp=GPUStoreOp.Store):(p.stencilLoadOp=GPULoadOp.Load,p.stencilStoreOp=GPUStoreOp.Store))):(c.loadOp=GPULoadOp.Load,c.storeOp=GPUStoreOp.Store,r.depth&&(p.depthLoadOp=GPULoadOp.Load,p.depthStoreOp=GPUStoreOp.Store),r.stencil&&(p.stencilLoadOp=GPULoadOp.Load,p.stencilStoreOp=GPUStoreOp.Store)),this.forceClear=!1}}export default WebGPUBackground;