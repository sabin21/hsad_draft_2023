async function RapierPhysics(){const t=await import("https://cdn.skypack.dev/@dimforge/rapier3d-compat@0.11.2");await t.init();const e=new t.World({x:0,y:-9.81,z:0}),n=[],s=new WeakMap,i={x:0,y:0,z:0};let o=0;return setInterval((function(){const t=performance.now();if(o>0){const i=(t-o)/1e3;e.timestep=i,e.step();for(let t=0,e=n.length;t<e;t++){const e=n[t];if(e.isInstancedMesh){const t=e.instanceMatrix.array,n=s.get(e);for(let e=0;e<n.length;e++){const s=n[e];compose(s.translation(),s.rotation(),t,16*e)}e.instanceMatrix.needsUpdate=!0,e.computeBoundingSphere()}else if(e.isMesh){const t=s.get(e);e.position.copy(t.translation()),e.quaternion.copy(t.rotation())}}}o=t}),1e3/60),{addMesh:function(i,o=0,c=0){const a=function(e){const n=e.parameters;if("BoxGeometry"===e.type){const e=void 0!==n.width?n.width/2:.5,s=void 0!==n.height?n.height/2:.5,i=void 0!==n.depth?n.depth/2:.5;return t.ColliderDesc.cuboid(e,s,i)}if("SphereGeometry"===e.type||"IcosahedronGeometry"===e.type){const e=void 0!==n.radius?n.radius:1;return t.ColliderDesc.ball(e)}return null}(i.geometry);null!==a&&(a.setMass(o),a.setRestitution(c),i.isInstancedMesh?function(i,o,c){const a=i.instanceMatrix.array,r=[];for(let n=0;n<i.count;n++){const s=16*n,i=o>0?t.RigidBodyDesc.dynamic():t.RigidBodyDesc.fixed();i.setTranslation(a[s+12],a[s+13],a[s+14]);const d=e.createRigidBody(i);e.createCollider(c,d),r.push(d)}o>0&&(n.push(i),s.set(i,r))}(i,o,a):i.isMesh&&function(i,o,c){const a=i.position,r=i.quaternion,d=o>0?t.RigidBodyDesc.dynamic():t.RigidBodyDesc.fixed();d.setTranslation(a.x,a.y,a.z),d.setRotation(r);const l=e.createRigidBody(d);e.createCollider(c,l),o>0&&(n.push(i),s.set(i,l))}(i,o,a))},setMeshPosition:function(t,e,n=0){if(t.isInstancedMesh){const o=s.get(t)[n];o.setAngvel(i),o.setLinvel(i),o.setTranslation(e)}else if(t.isMesh){const n=s.get(t);n.setAngvel(i),n.setLinvel(i),n.setTranslation(e)}}}}function compose(t,e,n,s){const i=e.x,o=e.y,c=e.z,a=e.w,r=i+i,d=o+o,l=c+c,p=i*r,y=i*d,h=i*l,u=o*d,f=o*l,g=c*l,m=a*r,M=a*d,x=a*l;n[s+0]=1-(u+g),n[s+1]=y+x,n[s+2]=h-M,n[s+3]=0,n[s+4]=y-x,n[s+5]=1-(p+g),n[s+6]=f+m,n[s+7]=0,n[s+8]=h+M,n[s+9]=f-m,n[s+10]=1-(p+u),n[s+11]=0,n[s+12]=t.x,n[s+13]=t.y,n[s+14]=t.z,n[s+15]=1}export{RapierPhysics};