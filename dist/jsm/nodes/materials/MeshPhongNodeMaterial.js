import NodeMaterial,{addNodeMaterial}from"./NodeMaterial.js";import{shininess,specularColor}from"../core/PropertyNode.js";import{materialShininess,materialSpecularColor}from"../accessors/MaterialNode.js";import phongLightingModel from"../functions/PhongLightingModel.js";import{float}from"../shadernode/ShaderNode.js";import{MeshPhongMaterial}from"three";const defaultValues=new MeshPhongMaterial;class MeshPhongNodeMaterial extends NodeMaterial{constructor(e){super(),this.isMeshPhongNodeMaterial=!0,this.lights=!0,this.shininessNode=null,this.specularNode=null,this.setDefaultValues(defaultValues),this.setValues(e)}constructLightingModel(){return phongLightingModel}constructVariants({stack:e}){const s=(this.shininessNode?float(this.shininessNode):materialShininess).max(1e-4);e.assign(shininess,s);const o=this.specularNode||materialSpecularColor;e.assign(specularColor,o)}copy(e){return this.colorNode=e.colorNode,this.opacityNode=e.opacityNode,this.alphaTestNode=e.alphaTestNode,this.shininessNode=e.shininessNode,this.specularNode=e.specularNode,this.lightNode=e.lightNode,this.positionNode=e.positionNode,super.copy(e)}}export default MeshPhongNodeMaterial;addNodeMaterial(MeshPhongNodeMaterial);