import TextureNode from"../accessors/TextureNode.js";import{NodeUpdateType}from"../core/constants.js";import{addNodeClass}from"../core/Node.js";import{addNodeElement,nodeProxy}from"../shadernode/ShaderNode.js";import{viewportTopLeft}from"./ViewportNode.js";import{Vector2}from"three";let size=new Vector2;class ViewportTextureNode extends TextureNode{constructor(e=viewportTopLeft,t=null){super(null,e,t),this.rtt=null,this.isOutputTextureNode=!0,this.updateBeforeType=NodeUpdateType.FRAME}constructRTT(e){return e.getRenderTarget()}construct(e){return null===this.rtt&&(this.rtt=this.constructRTT(e)),this.value=this.rtt.texture,super.construct(e)}updateBefore(e){const t=this.rtt,r=e.renderer;r.getDrawingBufferSize(size),t.setSize(size.width,size.height),r.copyFramebufferToRenderTarget(t)}}export default ViewportTextureNode;export const viewportTexture=nodeProxy(ViewportTextureNode);addNodeElement("viewportTexture",viewportTexture),addNodeClass(ViewportTextureNode);